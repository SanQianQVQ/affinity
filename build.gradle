//file:noinspection GradlePackageVersionRange
plugins {
    id 'fabric-loom' version '1.8-SNAPSHOT'
    id 'maven-publish'
}

version = "${project.mod_version}+${project.minecraft_base_version}"
group = project.maven_group

loom {
    accessWidenerPath = project.file("src/main/resources/affinity.accesswidener");
}

fabricApi {
    configureDataGeneration {
        createRunConfiguration = true
        strictValidation = false
    }
}

sourceSets {
    main {
        resources {
            srcDirs += ["src/generated"]
        }
    }
}

repositories {
    // modmenu, trinkets
    maven { url "https://maven.terraformersmc.com/" }

    // cca, pal
    maven { url "https://maven.ladysnake.org/releases" }

    // owo
    maven { url "https://maven.wispforest.io/releases/" }

    // rei
    maven { url "https://maven.shedaniel.me/" }

    // terrablender
    maven { url "https://maven.minecraftforge.net/" }

    // canvas
    // maven { url "https://maven.vram.io/" }

    // iris, sodium
    maven {
        url "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }

    // gadget
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url "https://jitpack.io" }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // actual dependencies

    modLocalRuntime "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"
    modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}"
    modCompileOnly "me.shedaniel:RoughlyEnoughItems-default-plugin-fabric:${project.rei_version}"

    // until shedman fixes REI
    modCompileOnly "me.shedaniel.cloth:cloth-config-fabric:13.0.121"
    modCompileOnly "dev.architectury:architectury-fabric:11.0.9"

    modCompileOnly "dev.emi:emi-fabric:${project.emi_version}"
    // modLocalRuntime "dev.emi:emi-fabric:${project.emi_version}"

    modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"

    modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cca_version}"
    modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cca_version}"
    modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-chunk:${project.cca_version}"
    modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-world:${project.cca_version}"
    modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-scoreboard:${project.cca_version}"

    modImplementation "dev.emi:trinkets:${project.trinkets_version}"

    modImplementation "io.github.ladysnake:PlayerAbilityLib:${project.pal_version}"
    include "io.github.ladysnake:PlayerAbilityLib:${project.pal_version}"

    modImplementation annotationProcessor("io.wispforest:owo-lib:${project.owo_version}")
    include "io.wispforest:owo-sentinel:${project.owo_version}"

    // TODO: re-enable this when owo what's this gets a 1.21 update
    modImplementation("io.wispforest:owo-whats-this:${project.owo_whats_this_version}")
    modImplementation("io.wispforest:lavender:${project.lavender_version}")

    modImplementation "com.github.glitchfiend:TerraBlender-fabric:${project.terrablender_version}"

    modImplementation include("io.wispforest:worldmesher:${project.worldmesher_version}")

    // sky block compatibility
    modCompileOnly "maven.modrinth:sodium:${project.sodium_version}"
    modCompileOnly "maven.modrinth:iris:${project.iris_version}"

//    modLocalRuntime "io.vram:canvas-fabric:${project.canvas_version}"
//    modLocalRuntime "io.wispforest:gadget:${project.gadget_version}"
}

base {
    archivesName = project.archives_base_name
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    // Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
    it.options.release = 21
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

jar {
    from("LICENSE") {
        rename { "${it}_${base.archivesName.get()}"}
    }
}
